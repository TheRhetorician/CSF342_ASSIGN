<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="PartB.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="unused3" type="ignored" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field6c48c47c">
	</Field>
	<Field name="unused5" type="ignored" numBits="5" relativity="absolute" signed="false" defaultValue="0" id="model.Field7f4d7a78">
	</Field>
	<Field name="reg" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field4fa235f6">
	</Field>
	<Field name="address" type="required" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="model.Field657f1242">
	</Field>
	<Field name="op" type="required" numBits="5" relativity="absolute" signed="false" defaultValue="0" id="model.Field4fbe41b5">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="ACC" width="16" initialValue="0" readOnly="false" id="model.module.Register7b49fbf9" />
	<Register name="D1" width="16" initialValue="0" readOnly="false" id="model.module.Register928332b" />
	<Register name="D2" width="16" initialValue="0" readOnly="false" id="model.module.Register75ae2d2d" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register121dfe63" />
	<Register name="MAR" width="8" initialValue="0" readOnly="false" id="model.module.Register263f49ea" />
	<Register name="MDR" width="16" initialValue="0" readOnly="false" id="model.module.Register6ec6976d" />
	<Register name="PC" width="8" initialValue="0" readOnly="false" id="model.module.Register6a0518dd" />
	<Register name="STATUS" width="8" initialValue="0" readOnly="false" id="model.module.Register17961d18" />

	<!--............. register arrays ...............-->
	<RegisterArray name="RA" length="8" width="16" id="model.module.RegisterArray4b3a7619" >
		<Register name="RA[0]" width="16" initialValue="0" readOnly="false" id="model.module.Register111dedec" />
		<Register name="RA[1]" width="16" initialValue="0" readOnly="false" id="model.module.Register539ccce2" />
		<Register name="RA[2]" width="16" initialValue="0" readOnly="false" id="model.module.Register74457554" />
		<Register name="RA[3]" width="16" initialValue="0" readOnly="false" id="model.module.Register6cd74f7b" />
		<Register name="RA[4]" width="16" initialValue="0" readOnly="false" id="model.module.Register12dbbd80" />
		<Register name="RA[5]" width="16" initialValue="0" readOnly="false" id="model.module.Register271598e5" />
		<Register name="RA[6]" width="16" initialValue="0" readOnly="false" id="model.module.Register78a5a686" />
		<Register name="RA[7]" width="16" initialValue="0" readOnly="false" id="model.module.Register2edf927e" />
	</RegisterArray>

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-BIT" bit="1" register="model.module.Register17961d18" halt="false" id="model.module.ConditionBit61270d98" />
	<ConditionBit name="HALT-BIT" bit="0" register="model.module.Register17961d18" halt="true" id="model.module.ConditionBit6a7e63e9" />
	<ConditionBit name="OVERFLOW" bit="2" register="model.module.Register17961d18" halt="false" id="model.module.ConditionBit3fba79b6" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="256" cellSize="16" id="model.module.RAM6da4405d" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<Test name="IF (ACC != 0) SKIP-1" register="model.module.Register7b49fbf9" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test34b6dbbc" />
	<Test name="IF (ACC &lt; 0) SKIP-2" register="model.module.Register7b49fbf9" start="0" numBits="16" comparison="LT" value="0" omission="2" id="model.microinstruction.Test2dce87e8" />
	<Test name="IF (ACC == 0) SKIP-1" register="model.module.Register7b49fbf9" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test41d52c2e" />
	<Test name="IF (ACC &gt; 0) SKIP-2" register="model.module.Register7b49fbf9" start="0" numBits="16" comparison="GE" value="0" omission="2" id="model.microinstruction.Testcd56bb1" />

	<!--............. increment .....................-->
	<Increment name="INC-PC" register="model.module.Register6a0518dd" overflowBit="model.module.ConditionBit6a7e63e9" delta="1" id="model.microinstruction.Increment55fd5c04" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="ACC+MDR-&gt;ACC" type="ADD" source1="model.module.Register7b49fbf9" source2="model.module.Register6ec6976d" destination="model.module.Register7b49fbf9" overflowBit="model.module.ConditionBit6a7e63e9" id="model.microinstruction.Arithmetic3d21aec9" />
	<Arithmetic name="ACC-MDR-&gt;ACC" type="SUBTRACT" source1="model.module.Register7b49fbf9" source2="model.module.Register6ec6976d" destination="model.module.Register7b49fbf9" overflowBit="model.module.ConditionBit6a7e63e9" id="model.microinstruction.Arithmetic52a5e0be" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="ACC-&gt;D1" source="model.module.Register7b49fbf9" srcStartBit="0" dest="model.module.Register928332b" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR758a81b8" />
	<TransferRtoR name="ACC-&gt;D2" source="model.module.Register7b49fbf9" srcStartBit="0" dest="model.module.Register75ae2d2d" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR4aa8fe71" />
	<TransferRtoR name="ACC-&gt;MDR" source="model.module.Register7b49fbf9" srcStartBit="0" dest="model.module.Register6ec6976d" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR7a4f560b" />
	<TransferRtoR name="D1(8-15)-&gt;MAR" source="model.module.Register928332b" srcStartBit="8" dest="model.module.Register263f49ea" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR792e9ec" />
	<TransferRtoR name="D1-&gt;ACC" source="model.module.Register928332b" srcStartBit="0" dest="model.module.Register7b49fbf9" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR26b42fe7" />
	<TransferRtoR name="D2-&gt;ACC" source="model.module.Register75ae2d2d" srcStartBit="0" dest="model.module.Register7b49fbf9" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR2b621636" />
	<TransferRtoR name="IR(5-7)-&gt;STATUS" source="model.module.Register121dfe63" srcStartBit="5" dest="model.module.Register17961d18" destStartBit="5" numBits="3" id="model.microinstruction.TransferRtoR3c1c78c3" />
	<TransferRtoR name="IR(8-10)-&gt;STATUS" source="model.module.Register121dfe63" srcStartBit="8" dest="model.module.Register17961d18" destStartBit="5" numBits="3" id="model.microinstruction.TransferRtoR7f41ad0" />
	<TransferRtoR name="IR(8-15)-&gt;MAR" source="model.module.Register121dfe63" srcStartBit="8" dest="model.module.Register263f49ea" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR2b9de25f" />
	<TransferRtoR name="IR(8-15)-&gt;PC" source="model.module.Register121dfe63" srcStartBit="8" dest="model.module.Register6a0518dd" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR3bd0b349" />
	<TransferRtoR name="MDR-&gt;ACC" source="model.module.Register6ec6976d" srcStartBit="0" dest="model.module.Register7b49fbf9" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR43bf9f6b" />
	<TransferRtoR name="MDR-&gt;IR" source="model.module.Register6ec6976d" srcStartBit="0" dest="model.module.Register121dfe63" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR7dcb26ae" />
	<TransferRtoR name="PC-&gt;MAR" source="model.module.Register6a0518dd" srcStartBit="0" dest="model.module.Register263f49ea" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR224e93b4" />

	<!--............. transferRtoA ..................-->
	<TransferRtoA name="ACC-&gt;RA" source="model.module.Register7b49fbf9" srcStartBit="0" dest="model.module.RegisterArray4b3a7619" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA54b2fb7" />
	<TransferRtoA name="D1-&gt;RA" source="model.module.Register928332b" srcStartBit="0" dest="model.module.RegisterArray4b3a7619" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA3ab0acb2" />
	<TransferRtoA name="D2-&gt;RA" source="model.module.Register75ae2d2d" srcStartBit="0" dest="model.module.RegisterArray4b3a7619" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA1e6a131c" />
	<TransferRtoA name="MDR-&gt;RA" source="model.module.Register6ec6976d" srcStartBit="0" dest="model.module.RegisterArray4b3a7619" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA48efe056" />

	<!--............. transferAtoR ..................-->
	<TransferAtoR name="RA-&gt;ACC" source="model.module.RegisterArray4b3a7619" srcStartBit="0" dest="model.module.Register7b49fbf9" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR1485586b" />
	<TransferAtoR name="RA-&gt;D1" source="model.module.RegisterArray4b3a7619" srcStartBit="0" dest="model.module.Register928332b" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR2b6fa375" />
	<TransferAtoR name="RA-&gt;D2" source="model.module.RegisterArray4b3a7619" srcStartBit="0" dest="model.module.Register75ae2d2d" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR6553b7f7" />
	<TransferAtoR name="RA-&gt;MDR" source="model.module.RegisterArray4b3a7619" srcStartBit="0" dest="model.module.Register6ec6976d" destStartBit="0" numBits="16" index="model.module.Register17961d18" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR5209065b" />

	<!--............. decode ........................-->
	<Decode name="DECODE-IR" ir="model.module.Register121dfe63" id="model.microinstruction.Decode6cf15a71" />

	<!--............. set condition bit .............-->
	<SetCondBit name="SET-HALT-BIT" bit="model.module.ConditionBit6a7e63e9" value="1" id="model.microinstruction.SetCondBit3a532891" />

	<!--............. io ............................-->
	<IO name="ACC-&gt;OUTPUT" direction="output" type="integer" buffer="model.module.Register7b49fbf9" connection="[Console]" id="model.microinstruction.IO4247dc23" />
	<IO name="INPUT-&gt;ACC" direction="input" type="integer" buffer="model.module.Register7b49fbf9" connection="[Console]" id="model.microinstruction.IO58e631ee" />

	<!--............. memory access .................-->
	<MemoryAccess name="MDR-&gt;RAM[MAR]" direction="write" memory="model.module.RAM6da4405d" data="model.module.Register6ec6976d" address="model.module.Register263f49ea" id="model.microinstruction.MemoryAccess3e22da51" />
	<MemoryAccess name="RAM[MAR]-&gt;MDR" direction="read" memory="model.module.RAM6da4405d" data="model.module.Register6ec6976d" address="model.module.Register263f49ea" id="model.microinstruction.MemoryAccess1d166aa4" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End61cc0be1" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<EQU name="r8" value="7" />
	<EQU name="r7" value="6" />
	<EQU name="r6" value="5" />
	<EQU name="r5" value="4" />
	<EQU name="r4" value="3" />
	<EQU name="r3" value="2" />
	<EQU name="r2" value="1" />
	<EQU name="r1" value="0" />

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR224e93b4" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d166aa4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7dcb26ae" />
		<Microinstruction microRef="model.microinstruction.Increment55fd5c04" />
		<Microinstruction microRef="model.microinstruction.Decode6cf15a71" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="mov" opcode="10" instructionFormat="op reg unused3 unused5" assemblyFormat="op reg" instructionColors="#e2a8ed #91c788 #c7e5c1 #f0d7ae" assemblyColors="#e2a8ed #91c788" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR3c1c78c3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA54b2fb7" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="sub" opcode="f" instructionFormat="op reg reg unused5" assemblyFormat="op reg reg" instructionColors="#a0bccd #d5f3df #e7e88e #cce98d" assemblyColors="#a0bccd #d5f3df #e7e88e" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR3c1c78c3" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR1485586b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7f41ad0" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR5209065b" />
		<Microinstruction microRef="model.microinstruction.Arithmetic52a5e0be" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="d" instructionFormat="op reg reg unused5" assemblyFormat="op reg reg" instructionColors="#90c3c4 #8bedad #93bdc7 #86a1e6" assemblyColors="#90c3c4 #8bedad #93bdc7" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR3c1c78c3" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR1485586b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7f41ad0" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR5209065b" />
		<Microinstruction microRef="model.microinstruction.Arithmetic3d21aec9" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="m2m" opcode="c" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#8ab0a0 #dce0e0 #afecaa" assemblyColors="#8ab0a0 #afecaa" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d166aa4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7dcb26ae" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7a4f560b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess3e22da51" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="m2a" opcode="8" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#aca093 #8db882 #86bac5" assemblyColors="#aca093 #86bac5" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d166aa4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7dcb26ae" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d166aa4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR43bf9f6b" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="jmpnz" opcode="7" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#cdaff6 #b9e38b #969ea2" assemblyColors="#cdaff6 #969ea2" >
		<Microinstruction microRef="model.microinstruction.Test41d52c2e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3bd0b349" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="jmpp" opcode="e" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#a7c4f4 #f5c485 #edf19a" assemblyColors="#a7c4f4 #edf19a" >
		<Microinstruction microRef="model.microinstruction.Test2dce87e8" />
		<Microinstruction microRef="model.microinstruction.Test41d52c2e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3bd0b349" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="stop" opcode="0" instructionFormat="op unused5 unused3 unused3" assemblyFormat="op" instructionColors="#9ce5f7 #81c2ab #93aeb5 #c2d3df #83bb83" assemblyColors="#9ce5f7" >
		<Microinstruction microRef="model.microinstruction.SetCondBit3a532891" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="lda" opcode="1" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#acd0a5 #cb9ab3 #b68699" assemblyColors="#acd0a5 #b68699" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d166aa4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR43bf9f6b" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="sta" opcode="2" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#e2c8c7 #ae9599 #d0ddda" assemblyColors="#e2c8c7 #d0ddda" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7a4f560b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess3e22da51" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="ipa" opcode="3" instructionFormat="op unused5 unused3 unused3" assemblyFormat="op" instructionColors="#ae92d7 #b890c0 #d481d2 #8fa5b8 #c2c3b1" assemblyColors="#ae92d7" >
		<Microinstruction microRef="model.microinstruction.IO58e631ee" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="opa" opcode="4" instructionFormat="op unused5 unused3 unused3" assemblyFormat="op" instructionColors="#dfcec3 #dbd0b5 #cfe1d0 #c3fead #9e9aea" assemblyColors="#dfcec3" >
		<Microinstruction microRef="model.microinstruction.IO4247dc23" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="adda" opcode="5" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#d484c0 #80dae2 #a394f8" assemblyColors="#d484c0 #a394f8" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d166aa4" />
		<Microinstruction microRef="model.microinstruction.Arithmetic3d21aec9" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="suba" opcode="6" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#83b9ef #8a9387 #dec5cc" assemblyColors="#83b9ef #dec5cc" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR2b9de25f" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1d166aa4" />
		<Microinstruction microRef="model.microinstruction.Arithmetic52a5e0be" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="jmp" opcode="9" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#e4c4b9 #e0f2d5 #f6f3c3" assemblyColors="#e4c4b9 #f6f3c3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR3bd0b349" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="a" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#b8feb9 #92bbe7 #e4acf8" assemblyColors="#b8feb9 #e4acf8" >
		<Microinstruction microRef="model.microinstruction.Test34b6dbbc" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3bd0b349" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="b" instructionFormat="op unused3 address" assemblyFormat="op address" instructionColors="#f6ecd4 #abd893 #cd87c3" assemblyColors="#f6ecd4 #cd87c3" >
		<Microinstruction microRef="model.microinstruction.Testcd56bb1" />
		<Microinstruction microRef="model.microinstruction.Test41d52c2e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3bd0b349" />
		<Microinstruction microRef="model.microinstruction.End61cc0be1" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
		<RegisterRAMPair register="model.module.Register6a0518dd" ram="model.module.RAM6da4405d" dynamic="false" />
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM6da4405d" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
