<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="PartB.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="unused8" type="ignored" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="model.Field2b982748">
	</Field>
	<Field name="unused5" type="ignored" numBits="5" relativity="absolute" signed="false" defaultValue="0" id="model.Field7f8aa050">
	</Field>
	<Field name="reg" type="required" numBits="3" relativity="absolute" signed="false" defaultValue="0" id="model.Field407323c4">
	</Field>
	<Field name="addr11" type="required" numBits="11" relativity="absolute" signed="false" defaultValue="0" id="model.Fieldc21d1f7">
	</Field>
	<Field name="unused11" type="ignored" numBits="11" relativity="absolute" signed="false" defaultValue="0" id="model.Field66e9155c">
	</Field>
	<Field name="op" type="required" numBits="5" relativity="absolute" signed="false" defaultValue="0" id="model.Field4ccbb1f1">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="ACC" width="16" initialValue="0" readOnly="false" id="model.module.Register777e9250" />
	<Register name="D1" width="16" initialValue="0" readOnly="false" id="model.module.Register2b822b1c" />
	<Register name="D2" width="16" initialValue="0" readOnly="false" id="model.module.Register51ba0861" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register72ac85b9" />
	<Register name="MAR" width="11" initialValue="0" readOnly="false" id="model.module.Register71c365ae" />
	<Register name="MDR" width="16" initialValue="0" readOnly="false" id="model.module.Register4ba37a41" />
	<Register name="PC" width="11" initialValue="0" readOnly="false" id="model.module.Register4adb9a54" />
	<Register name="STATUS" width="8" initialValue="0" readOnly="false" id="model.module.Register5ccc5ffb" />

	<!--............. register arrays ...............-->
	<RegisterArray name="RA" length="8" width="16" id="model.module.RegisterArray3648bfd9" >
		<Register name="RA[0]" width="16" initialValue="0" readOnly="false" id="model.module.Register66e9aa23" />
		<Register name="RA[1]" width="16" initialValue="0" readOnly="false" id="model.module.Register70769590" />
		<Register name="RA[2]" width="16" initialValue="0" readOnly="false" id="model.module.Register4efb3fe2" />
		<Register name="RA[3]" width="16" initialValue="0" readOnly="false" id="model.module.Register3dbef793" />
		<Register name="RA[4]" width="16" initialValue="0" readOnly="false" id="model.module.Register162deab5" />
		<Register name="RA[5]" width="16" initialValue="0" readOnly="false" id="model.module.Register52b337f5" />
		<Register name="RA[6]" width="16" initialValue="0" readOnly="false" id="model.module.Register4520066e" />
		<Register name="RA[7]" width="16" initialValue="0" readOnly="false" id="model.module.Registerf686336" />
	</RegisterArray>

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-BIT" bit="1" register="model.module.Register5ccc5ffb" halt="false" id="model.module.ConditionBit3daed59b" />
	<ConditionBit name="HALT-BIT" bit="0" register="model.module.Register5ccc5ffb" halt="true" id="model.module.ConditionBit78f8a736" />
	<ConditionBit name="OVERFLOW" bit="2" register="model.module.Register5ccc5ffb" halt="false" id="model.module.ConditionBit34c51acc" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="256" cellSize="16" id="model.module.RAM8511c40" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<Test name="IF (ACC != 0) SKIP-1" register="model.module.Register777e9250" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test439812dc" />
	<Test name="IF (ACC &lt; 0) SKIP-2" register="model.module.Register777e9250" start="0" numBits="16" comparison="LT" value="0" omission="2" id="model.microinstruction.Test7e64dc8e" />
	<Test name="IF (ACC == 0) SKIP-1" register="model.module.Register777e9250" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test62ebaaf4" />
	<Test name="IF (ACC &gt; 0) SKIP-2" register="model.module.Register777e9250" start="0" numBits="16" comparison="GE" value="0" omission="2" id="model.microinstruction.Test62d809f5" />

	<!--............. increment .....................-->
	<Increment name="INC-PC" register="model.module.Register4adb9a54" overflowBit="model.module.ConditionBit78f8a736" delta="1" id="model.microinstruction.Increment61d5e980" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="ACC+MDR-&gt;ACC" type="ADD" source1="model.module.Register777e9250" source2="model.module.Register4ba37a41" destination="model.module.Register777e9250" overflowBit="model.module.ConditionBit78f8a736" id="model.microinstruction.Arithmetic398dd998" />
	<Arithmetic name="ACC-MDR-&gt;ACC" type="SUBTRACT" source1="model.module.Register777e9250" source2="model.module.Register4ba37a41" destination="model.module.Register777e9250" overflowBit="model.module.ConditionBit78f8a736" id="model.microinstruction.Arithmetic60e6857" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="ACC-&gt;D1" source="model.module.Register777e9250" srcStartBit="0" dest="model.module.Register2b822b1c" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR24bb5ec2" />
	<TransferRtoR name="ACC-&gt;D2" source="model.module.Register777e9250" srcStartBit="0" dest="model.module.Register51ba0861" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR6a6c2a3c" />
	<TransferRtoR name="ACC-&gt;MDR" source="model.module.Register777e9250" srcStartBit="0" dest="model.module.Register4ba37a41" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR3d7a7ff0" />
	<TransferRtoR name="D1(5-15)-&gt;MAR" source="model.module.Register2b822b1c" srcStartBit="5" dest="model.module.Register71c365ae" destStartBit="0" numBits="11" id="model.microinstruction.TransferRtoR4843e4d8" />
	<TransferRtoR name="D1-&gt;ACC" source="model.module.Register2b822b1c" srcStartBit="0" dest="model.module.Register777e9250" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR36f0ee5c" />
	<TransferRtoR name="D2-&gt;ACC" source="model.module.Register51ba0861" srcStartBit="0" dest="model.module.Register777e9250" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR3dc60f74" />
	<TransferRtoR name="IR(5-15)-&gt;MAR" source="model.module.Register72ac85b9" srcStartBit="5" dest="model.module.Register71c365ae" destStartBit="0" numBits="11" id="model.microinstruction.TransferRtoR53ad62c3" />
	<TransferRtoR name="IR(5-15)-&gt;PC" source="model.module.Register72ac85b9" srcStartBit="5" dest="model.module.Register4adb9a54" destStartBit="0" numBits="11" id="model.microinstruction.TransferRtoR49f294a" />
	<TransferRtoR name="IR(5-7)-&gt;STATUS" source="model.module.Register72ac85b9" srcStartBit="5" dest="model.module.Register5ccc5ffb" destStartBit="5" numBits="3" id="model.microinstruction.TransferRtoR381cb1f5" />
	<TransferRtoR name="IR(8-10)-&gt;STATUS" source="model.module.Register72ac85b9" srcStartBit="8" dest="model.module.Register5ccc5ffb" destStartBit="5" numBits="3" id="model.microinstruction.TransferRtoR9f674f" />
	<TransferRtoR name="MDR-&gt;ACC" source="model.module.Register4ba37a41" srcStartBit="0" dest="model.module.Register777e9250" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR7db7db6f" />
	<TransferRtoR name="MDR-&gt;IR" source="model.module.Register4ba37a41" srcStartBit="0" dest="model.module.Register72ac85b9" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR2de729af" />
	<TransferRtoR name="PC-&gt;MAR" source="model.module.Register4adb9a54" srcStartBit="0" dest="model.module.Register71c365ae" destStartBit="0" numBits="11" id="model.microinstruction.TransferRtoR7029a6ff" />

	<!--............. transferRtoA ..................-->
	<TransferRtoA name="ACC-&gt;RA" source="model.module.Register777e9250" srcStartBit="0" dest="model.module.RegisterArray3648bfd9" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA5ce63eed" />
	<TransferRtoA name="D1-&gt;RA" source="model.module.Register2b822b1c" srcStartBit="0" dest="model.module.RegisterArray3648bfd9" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA61c565d0" />
	<TransferRtoA name="D2-&gt;RA" source="model.module.Register51ba0861" srcStartBit="0" dest="model.module.RegisterArray3648bfd9" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA52145900" />
	<TransferRtoA name="MDR-&gt;RA" source="model.module.Register4ba37a41" srcStartBit="0" dest="model.module.RegisterArray3648bfd9" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferRtoA5ca2f746" />

	<!--............. transferAtoR ..................-->
	<TransferAtoR name="RA-&gt;ACC" source="model.module.RegisterArray3648bfd9" srcStartBit="0" dest="model.module.Register777e9250" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoRb532941" />
	<TransferAtoR name="RA-&gt;D1" source="model.module.RegisterArray3648bfd9" srcStartBit="0" dest="model.module.Register2b822b1c" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR4000e7aa" />
	<TransferAtoR name="RA-&gt;D2" source="model.module.RegisterArray3648bfd9" srcStartBit="0" dest="model.module.Register51ba0861" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR4c18930" />
	<TransferAtoR name="RA-&gt;MDR" source="model.module.RegisterArray3648bfd9" srcStartBit="0" dest="model.module.Register4ba37a41" destStartBit="0" numBits="16" index="model.module.Register5ccc5ffb" indexStart="5" indexNumBits="3" id="model.microinstruction.TransferAtoR223e6c4" />

	<!--............. decode ........................-->
	<Decode name="DECODE-IR" ir="model.module.Register72ac85b9" id="model.microinstruction.Decode1028dee0" />

	<!--............. set condition bit .............-->
	<SetCondBit name="SET-HALT-BIT" bit="model.module.ConditionBit78f8a736" value="1" id="model.microinstruction.SetCondBit57d256f8" />

	<!--............. io ............................-->
	<IO name="ACC-&gt;OUTPUT" direction="output" type="integer" buffer="model.module.Register777e9250" connection="[Console]" id="model.microinstruction.IO5fd2cd3b" />
	<IO name="INPUT-&gt;ACC" direction="input" type="integer" buffer="model.module.Register777e9250" connection="[Console]" id="model.microinstruction.IO42da15c3" />

	<!--............. memory access .................-->
	<MemoryAccess name="MDR-&gt;RAM[MAR]" direction="write" memory="model.module.RAM8511c40" data="model.module.Register4ba37a41" address="model.module.Register71c365ae" id="model.microinstruction.MemoryAccess14531ca6" />
	<MemoryAccess name="RAM[MAR]-&gt;MDR" direction="read" memory="model.module.RAM8511c40" data="model.module.Register4ba37a41" address="model.module.Register71c365ae" id="model.microinstruction.MemoryAccess5173ed42" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End18014942" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<EQU name="r8" value="7" />
	<EQU name="r7" value="6" />
	<EQU name="r6" value="5" />
	<EQU name="r5" value="4" />
	<EQU name="r4" value="3" />
	<EQU name="r3" value="2" />
	<EQU name="r2" value="1" />
	<EQU name="r1" value="0" />

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR7029a6ff" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5173ed42" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2de729af" />
		<Microinstruction microRef="model.microinstruction.Increment61d5e980" />
		<Microinstruction microRef="model.microinstruction.Decode1028dee0" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="mov" opcode="10" instructionFormat="op reg unused8" assemblyFormat="op reg" instructionColors="#e2a8ed #91c788 #c7e5c1" assemblyColors="#e2a8ed #91c788" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR381cb1f5" />
		<Microinstruction microRef="model.microinstruction.TransferRtoA5ce63eed" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="sub" opcode="f" instructionFormat="op reg reg unused5" assemblyFormat="op reg reg" instructionColors="#a0bccd #d5f3df #e7e88e #cce98d" assemblyColors="#a0bccd #d5f3df #e7e88e" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR381cb1f5" />
		<Microinstruction microRef="model.microinstruction.TransferAtoRb532941" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR9f674f" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR223e6c4" />
		<Microinstruction microRef="model.microinstruction.Arithmetic60e6857" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="d" instructionFormat="op reg reg unused5" assemblyFormat="op reg reg" instructionColors="#90c3c4 #8bedad #93bdc7 #86a1e6" assemblyColors="#90c3c4 #8bedad #93bdc7" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR381cb1f5" />
		<Microinstruction microRef="model.microinstruction.TransferAtoRb532941" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR9f674f" />
		<Microinstruction microRef="model.microinstruction.TransferAtoR223e6c4" />
		<Microinstruction microRef="model.microinstruction.Arithmetic398dd998" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="m2m" opcode="c" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#8ab0a0 #afecaa" assemblyColors="#8ab0a0 #afecaa" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5173ed42" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2de729af" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3d7a7ff0" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess14531ca6" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="m2a" opcode="8" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#aca093 #86bac5" assemblyColors="#aca093 #86bac5" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5173ed42" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR2de729af" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5173ed42" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7db7db6f" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="jmpnz" opcode="7" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#cdaff6 #969ea2" assemblyColors="#cdaff6 #969ea2" >
		<Microinstruction microRef="model.microinstruction.Test62ebaaf4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR49f294a" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="jmpp" opcode="e" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#a7c4f4 #edf19a" assemblyColors="#a7c4f4 #edf19a" >
		<Microinstruction microRef="model.microinstruction.Test7e64dc8e" />
		<Microinstruction microRef="model.microinstruction.Test62ebaaf4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR49f294a" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="stop" opcode="0" instructionFormat="op unused11" assemblyFormat="op" instructionColors="#9ce5f7 #83bb83" assemblyColors="#9ce5f7" >
		<Microinstruction microRef="model.microinstruction.SetCondBit57d256f8" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="lda" opcode="1" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#acd0a5 #b68699" assemblyColors="#acd0a5 #b68699" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5173ed42" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7db7db6f" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="sta" opcode="2" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#e2c8c7 #d0ddda" assemblyColors="#e2c8c7 #d0ddda" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3d7a7ff0" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess14531ca6" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="ipa" opcode="3" instructionFormat="op unused11" assemblyFormat="op" instructionColors="#ae92d7 #c2c3b1" assemblyColors="#ae92d7" >
		<Microinstruction microRef="model.microinstruction.IO42da15c3" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="opa" opcode="4" instructionFormat="op unused11" assemblyFormat="op" instructionColors="#dfcec3 #9e9aea" assemblyColors="#dfcec3" >
		<Microinstruction microRef="model.microinstruction.IO5fd2cd3b" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="adda" opcode="5" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#d484c0 #a394f8" assemblyColors="#d484c0 #a394f8" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5173ed42" />
		<Microinstruction microRef="model.microinstruction.Arithmetic398dd998" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="suba" opcode="6" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#83b9ef #dec5cc" assemblyColors="#83b9ef #dec5cc" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR53ad62c3" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess5173ed42" />
		<Microinstruction microRef="model.microinstruction.Arithmetic60e6857" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="jmp" opcode="9" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#e4c4b9 #f6f3c3" assemblyColors="#e4c4b9 #f6f3c3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR49f294a" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="a" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#b8feb9 #e4acf8" assemblyColors="#b8feb9 #e4acf8" >
		<Microinstruction microRef="model.microinstruction.Test439812dc" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR49f294a" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="b" instructionFormat="op addr11" assemblyFormat="op addr11" instructionColors="#f6ecd4 #cd87c3" assemblyColors="#f6ecd4 #cd87c3" >
		<Microinstruction microRef="model.microinstruction.Test62d809f5" />
		<Microinstruction microRef="model.microinstruction.Test62ebaaf4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR49f294a" />
		<Microinstruction microRef="model.microinstruction.End18014942" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
		<RegisterRAMPair register="model.module.Register4adb9a54" ram="model.module.RAM8511c40" dynamic="false" />
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM8511c40" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
